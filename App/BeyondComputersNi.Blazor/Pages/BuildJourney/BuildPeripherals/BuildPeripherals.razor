@using BeyondComputersNi.Blazor.Pages.BuildJourney.BuildSkeleton
@using BeyondComputersNi.Blazor.Pages.BuildJourney.BuildTimeline

@attribute [Route(PageUrl)]
@inherits Form

@if (LoadingForm)
{
    <BuildSkeleton />
}
else
{
    <EditForm EditContext="@EditContext" OnValidSubmit="@OnValidSubmit" OnInvalidSubmit="@OnInvalidSubmit">
        <DataAnnotationsValidator />

        <MudGrid Class="mb-6">
            <MudItem md="8">
                <MudPaper Class="mt-8 pa-8" Elevation="3">
                    <MudText Typo="Typo.h2" Align="Align.Center">Build your computer</MudText>
                    <MudText Typo="Typo.h3" Align="Align.Center" GutterBottom="true">Peripherals</MudText>

                    @if (HasErrors)
                    {
                        <FormValidationErrors />
                    }

                    <MudAutocomplete T="string" @bind-Value="@BuildPeripheralsViewModel!.Case" Label="Case"
                                     SearchFunc="(string value) => BuildService!.GetComponentsAsync(nameof(BuildPeripheralsViewModel.Case), value)"
                                     ResetValueOnEmptyText="true" CoerceValue="true" For="() => BuildPeripheralsViewModel!.Case" />

                    <MudAutocomplete T="string" @bind-Value="@BuildPeripheralsViewModel!.Keyboard" Label="Keyboard"
                                     SearchFunc="(string value) => BuildService!.GetComponentsAsync(nameof(BuildPeripheralsViewModel.Keyboard), value)"
                                     ResetValueOnEmptyText="true" CoerceValue="true" For="() => BuildPeripheralsViewModel!.Keyboard" />

                    <MudAutocomplete T="string" @bind-Value="@BuildPeripheralsViewModel!.Mouse" Label="Mouse"
                                     SearchFunc="(string value) => BuildService!.GetComponentsAsync(nameof(BuildPeripheralsViewModel.Mouse), value)"
                                     ResetValueOnEmptyText="true" CoerceValue="true" For="() => BuildPeripheralsViewModel!.Mouse" />

                    <MudAutocomplete T="string" @bind-Value="@BuildPeripheralsViewModel!.Monitor" Label="Monitor"
                                     SearchFunc="(string value) => BuildService!.GetComponentsAsync(nameof(BuildPeripheralsViewModel.Monitor), value)"
                                     ResetValueOnEmptyText="true" CoerceValue="true" For="() => BuildPeripheralsViewModel!.Monitor" />

                    <MudAutocomplete T="string" @bind-Value="@BuildPeripheralsViewModel!.Speakers" Label="Speakers"
                                     SearchFunc="(string value) => BuildService!.GetComponentsAsync(nameof(BuildPeripheralsViewModel.Speakers), value)"
                                     ResetValueOnEmptyText="true" CoerceValue="true" For="() => BuildPeripheralsViewModel!.Speakers" />

                    @if (Submitting)
                    {
                        <LoadingSpinner />
                    }

                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="mt-6">
                        Save peripherals
                    </MudButton>
                </MudPaper>
            </MudItem>

            <MudItem md="4">
                <BuildTimeline CurrentItem="BuildTimelineItem.Peripherals" />
            </MudItem>
        </MudGrid>
    </EditForm>
}
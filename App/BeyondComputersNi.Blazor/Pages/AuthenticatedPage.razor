@attribute [Authorize]
@page "/Auth"

<MudText Typo="Typo.h1" Align="Align.Center">Authenticated</MudText>
<MudText Typo="Typo.body1" Align="Align.Center">If you can see this page, it means you're authenticated.</MudText>
<MudText Typo="Typo.body1" Align="Align.Center">Good for you.</MudText>

@if (NumberOfComputers is not null)
{
    <MudText Typo="Typo.body1" Align="Align.Center">Computers: @NumberOfComputers</MudText>
}

@code {
    [Inject]
    private IComputerService ComputerService { get; set; }

    [Inject]
    private ISnackbar Snackbar { get; set; }

    public int? NumberOfComputers { get; set; }

    protected async override Task OnInitializedAsync()
    {
        try
        {
            var computers = await ComputerService.GetAllComputers();
            if (computers is not null) NumberOfComputers = computers.Count;
        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message, Severity.Error);
        }
    }
}